plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4' apply false
    id 'io.spring.dependency-management' version '1.1.6' apply false
    id 'org.hidetake.swagger.generator' version '2.19.2' apply false
}

group = 'com.tkd'
version = '0.0.1-SNAPSHOT'

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.hidetake.swagger.generator'

    group = 'com.tkd'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.47'  // or Swagger Codegen V3

        // Common dependencies
        implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
        implementation 'io.swagger.core.v3:swagger-annotations:2.2.23'
        implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
        implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
        implementation 'com.github.joschi.jackson:jackson-datatype-threetenbp:2.15.2'
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

        // security dependencies
        implementation 'org.springframework.boot:spring-boot-starter-security'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'org.postgresql:postgresql'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    swaggerSources {
        apiSpec {
            code {
                language = 'spring'
                jvmArgs = ['--add-opens=java.base/java.util=ALL-UNNAMED'] // for Swagger Codegen v3 on Java 16+
                configFile = file("${projectDir}/src/main/resources/config.json")
            }
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    compileJava.dependsOn swaggerSources.apiSpec.code
    processResources.dependsOn generateSwaggerCode
    sourceSets.main.java.srcDir "${swaggerSources.apiSpec.code.outputDir}/src/main/java"
    sourceSets.main.resources.srcDir "${swaggerSources.apiSpec.code.outputDir}/src/main/resources"
    bootRun.dependsOn generateSwaggerCode
}