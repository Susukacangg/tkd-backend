openapi: 3.0.0
info:
  title: Dictionary service API Spec for TKD
  description: Endpoints for dictionary related functions
  version: 1.0.0

servers:
  - url: http://localhost:8082
    description: Local development server

paths:
  /dict/add:
    post:
      tags:
        - DictV1
      operationId: addToDictionary
      summary: Add a new word or phrase to the dictionary
      requestBody:
        description: The submitted word or phrase details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WordModel"
      responses:
        "200":
          description: Contribution feedback
          content:
            application/json:
              schema:
                type: number
  /dict/random:
    get:
      tags:
        - DictV1
      operationId: getRandomWords
      summary: Get a set of random words to display
      responses:
        "200":
          description: The set of random words retrieved wrapped in a Page object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WordModel'
  /dict/{wordId}:
    get:
      tags:
        - DictV1
      operationId: getWord
      summary: Find word based on passed wordId
      parameters:
        - in: path
          name: wordId
          required: true
          description: ID of word to be searched
          schema:
            type: number
      responses:
        "200":
          description: Dictionary item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordModel'
    put:
      tags:
        - DictV1
      operationId: editWord
      summary: Update the word based on user edit
      parameters:
        - in: path
          name: wordId
          required: true
          description: Word ID of the word to be updated
          schema:
            type: number
      requestBody:
        description: Details of the word to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WordModel'
      responses:
        "200":
          description: Word ID
          content:
            application/json:
              schema:
                type: integer
  /dict/search:
    get:
      tags:
        - DictV1
      operationId: findWord
      summary: Find word based on search string
      parameters:
        - in: query
          name: word
          required: true
          description: Word string to be searched
          schema:
            type: string
        - in: query
          name: pageNum
          required: true
          description: Page of list of words
          schema:
            type: integer
      responses:
        "200":
          description: Dictionary items paged
          content:
            application/json:
              schema:
                type: object
  /dict/suggest:
    get:
      tags:
        - DictV1
      operationId: suggestWord
      summary: Get words containing search string
      parameters:
        - in: query
          name: searchStr
          required: true
          description: String to match words in database
          schema:
            type: string
      responses:
        "200":
          description: List of words
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /dict/get-users-words:
    get:
      tags:
        - DictV1
      operationId: getAllUserWords
      summary: Get the words that the user has contributed
      parameters:
        - in: query
          name: pageNum
          required: true
          description: Page number of list of contributed words of user
          schema:
            type: integer
      responses:
        "200":
          description: Page of list of words
          content:
            application/json:
              schema:
                type: object

components:
  schemas:
    WordModel:
      type: object
      properties:
        username:
          type: string
        wordId:
          type: number
        word:
          type: string
        translations:
          type: array
          items:
            $ref: '#/components/schemas/TranslationModel'
        usageExamples:
          type: array
          items:
            $ref: '#/components/schemas/UsageExampleModel'
    TranslationModel:
      type: object
      properties:
        translationId:
          type: number
        translation:
          type: string
    UsageExampleModel:
      type: object
      properties:
        exampleId:
          type: number
        example:
          type: string
        exampleTranslation:
          type: string
